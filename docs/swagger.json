{
  "openapi": "3.0.0",
  "info": {
    "title": "Final Project API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Auth API Collection"
    },
    {
      "name": "Airport",
      "description": "Airport API Collection"
    },
    {
      "name": "Company",
      "description": "Company API Collection"
    },
    {
      "name": "Airplane",
      "description": "Airplane API Collection"
    },
    {
      "name": "User",
      "description": "User API Collection"
    },
    {
      "name": "Ticket",
      "description": "Ticket API Collection"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a New User",
        "requestBody": {
          "description": "Register New User",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Zidane"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Arvito"
                  },
                  "email": {
                    "type": "string",
                    "example": "vito@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "p@ssw0rd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success Register New User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Register New User"
                    },
                    "data": {
                      "$ref": "#/components/schemas/registerUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email Already Exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "email already taken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login User",
        "requestBody": {
          "description": "Login User",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "vito@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "p@ssw0rd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Login"
                    },
                    "data": {
                      "$ref": "#/components/schemas/loginUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect Password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "The password you entered is incorrect"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Email Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login/admin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login Admin",
        "requestBody": {
          "description": "Login for Admin",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "fiqri@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "qwerty123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Login For Admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Login Admin"
                    },
                    "data": {
                      "$ref": "#/components/schemas/loginAdmin"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect Password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "The password you entered is incorrect"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          },
          "404": {
            "description": "Email Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airport/": {
      "get": {
        "summary": "Get All Airport Data",
        "description": "This API for see all airport data",
        "tags": ["Airport"],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "$ref": "#/components/schemas/airport"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airport/{id}": {
      "get": {
        "summary": "Get Airport Data By Id",
        "description": "This API for see airport data by Id",
        "tags": ["Airport"],
        "parameters": [
          {
            "in": "path",
            "description": "input id airport",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/airport"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/airportNotFound"
          }
        }
      }
    },
    "/api/airport/create": {
      "post": {
        "summary": "Create New Airport Data",
        "tags": ["Airport"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/airportBody"
        },
        "responses": {
          "201": {
            "description": "Success Create New Airport",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Create New Airport"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/airport"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Empty value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "airport name cannot be empty"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/airport/update/{id}": {
      "put": {
        "summary": "Update Airport Data By Id",
        "tags": ["Airport"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id airport",
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/airportBody"
        },
        "responses": {
          "200": {
            "description": "Success Update Airport Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Update Airport"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/airport"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/airportNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/airport/delete/{id}": {
      "delete": {
        "summary": "Delete Airport Data By Id",
        "tags": ["Airport"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id airport",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success Delete Data Airport",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Delete Airport"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/airportNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/company": {
      "get": {
        "summary": "Get All Company Data",
        "description": "This API for see all company data",
        "tags": ["Company"],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "$ref": "#/components/schemas/company"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/company/{id}": {
      "get": {
        "summary": "Get Company Data By Id",
        "description": "This API for see company data by Id",
        "tags": ["Company"],
        "parameters": [
          {
            "in": "path",
            "description": "input id company",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/company"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/companyNotFound"
          }
        }
      }
    },
    "/api/company/create": {
      "post": {
        "summary": "Create New Company Data",
        "tags": ["Company"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "description": "companyName and image cannot be blank",
        "requestBody": {
          "$ref": "#/components/requestBody/companyBody"
        },
        "responses": {
          "201": {
            "description": "Success Create New Company",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Create New Company"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/company"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Empty value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "company name cannot be empty"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/company/update/{id}": {
      "put": {
        "summary": "Update Company Data By Id",
        "tags": ["Company"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "description": "if req body is empty data not change",
        "parameters": [
          {
            "in": "path",
            "description": "input id company",
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/companyBody"
        },
        "responses": {
          "200": {
            "description": "Success Update Company Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Update Company"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/company"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/companyNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/company/delete/{id}": {
      "delete": {
        "summary": "Delete Company Data By Id",
        "tags": ["Company"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id company",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success Delete Data Company",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Delete Company"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/companyNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/airplane/": {
      "get": {
        "summary": "Get All Airplane Data",
        "description": "This API for see all airplane data",
        "tags": ["Airplane"],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "$ref": "#/components/schemas/airplane"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airplane/{id}": {
      "get": {
        "summary": "Get Airplane Data By Id",
        "description": "This API for see airplane data by Id",
        "tags": ["Airplane"],
        "parameters": [
          {
            "in": "path",
            "description": "input id airplane",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/airplane"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/airplaneNotFound"
          }
        }
      }
    },
    "/api/airplane/create": {
      "post": {
        "summary": "Create New Airplane Data",
        "tags": ["Airplane"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/airplaneBody"
        },
        "responses": {
          "201": {
            "description": "Success Create New Airplane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Create New Airplane"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/airplane"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Empty value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "airplane name cannot be empty"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/airplane/update/{id}": {
      "put": {
        "summary": "Update Airplane Data By Id",
        "tags": ["Airplane"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id airplane",
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/airplaneBody"
        },
        "responses": {
          "200": {
            "description": "Success Update Airplane Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Update Airplane"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/airplane"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/airplaneNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/airplane/delete/{id}": {
      "delete": {
        "summary": "Delete Airplane Data By Id",
        "tags": ["Airplane"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id airplane",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success Delete Data Airplane",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Delete Airplane"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/airplaneNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/user/": {
      "get": {
        "tags": ["User"],
        "summary": "Get user",
        "description": "",
        "operationId": "getUserById",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/user/update/": {
      "put": {
        "summary": "Update user",
        "tags": ["User"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "description": "if req body is empty data not change",
        "requestBody": {
          "$ref": "#/components/requestBody/userBody"
        },
        "responses": {
          "200": {
            "description": "Success Update Profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Update Profile"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/user/delete/{id}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete user by id",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Delete Data User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Delete User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/ticket/search/": {
      "get": {
        "summary": "Search Ticket Data",
        "description": "search ticket ",
        "tags": ["Ticket"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "description": "format (2023-01-12)",
            "name": "departureDate",
            "required": true
          },
          {
            "in": "query",
            "description": "Jakarta (Case Sensitive)",
            "name": "originCity",
            "required": true
          },
          {
            "in": "query",
            "description": "Bali (Case Sensitive)",
            "name": "destinationCity",
            "required": true
          },
          {
            "in": "query",
            "description": "format (2023-01-12)",
            "name": "returnDate"
          }
        ],
        "responses": {
          "200": {
            "description": "success responses Note: response ticketGo and ticketBack is array of object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "ticketGo":{
                          "$ref": "#/components/schemas/ticket"
                        },
                        "ticketBack":{
                          "$ref": "#/components/schemas/ticket"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/searchNotFound"
          }
        }
      }
    },
    "/api/ticket/": {
      "get": {
        "summary": "Get All Ticket Data",
        "description": "This API for see all ticket data",
        "tags": ["Ticket"],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ticket"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ticket/{id}": {
      "get": {
        "summary": "Get Ticket Data By Id",
        "description": "This API for see ticket data by Id",
        "tags": ["Ticket"],
        "parameters": [
          {
            "in": "path",
            "description": "input id ticket",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ticket"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ticketNotFound"
          }
        }
      }
    },
    "/api/ticket/create": {
      "post": {
        "summary": "Create New Ticket Data",
        "tags": ["Ticket"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/ticketBody"
        },
        "responses": {
          "201": {
            "description": "Success Create New Ticket",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Create New Ticket"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/ticket"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "duplicate ticket code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "ticket with this code already exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/ticket/update/{id}": {
      "put": {
        "summary": "Update Ticket Data By Id",
        "tags": ["Ticket"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id ticket",
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/ticketBody"
        },
        "responses": {
          "200": {
            "description": "Success Update Ticket Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Update Ticket"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/ticket"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ticketNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/ticket/delete/{id}": {
      "delete": {
        "summary": "Delete Ticket Data By Id",
        "tags": ["Ticket"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id ticket",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success Delete Data Ticket",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Delete Ticket"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ticketNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/transaction/": {
      "get": {
        "summary": "Get All Transaction Data By user in token ",
        "description": "see all transaction data by token, this can be used for history user",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/transaction/{id}": {
      "get": {
        "summary": "Get transaction Data By Id",
        "description": "This API for see transaction data by Id",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "path",
            "description": "input id transaction",
            "name": "id",
            "required": true
          }
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          }
        }
      }
    },
    "/api/transaction/filter/": {
      "get": {
        "summary": "Get Transaction Data By user and status ",
        "description": "see transaction data by token and status, this can be used for history user",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "description": "status (success, pending, or canceled)",
            "name": "status",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "type": "array",
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          }
        }
      }
    },
    "/api/transaction/trip/": {
      "get": {
        "summary": "Get Transaction Data By user and type trip ",
        "description": "see transaction data by token and type trip, this can be used for history user",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "description": "tripId (1 = One way, 2 = Round Trip)",
            "name": "tripId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "type": "array",
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          }
        }
      }
    },
    "/api/transaction/add": {
      "post": {
        "summary": "Create New Transaction Data",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/transaksiBody"
        },
        "responses": {
          "201": {
            "description": "Success Create New Transaksi",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Create New Transaction"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ticket in transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "ticket not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/transaction/update/{id}": {
      "put": {
        "summary": "Update Transaction Data By Id",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id transaction",
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/transaksiBody"
        },
        "responses": {
          "200": {
            "description": "Success Update Transaction Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Update Transaction"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/transaction/cancel/{id}": {
      "put": {
        "summary": "Cancel Transaction Data By Id",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id transaction",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success Cancel Data Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Cancel Transaction"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/transaction/admin/": {
      "get": {
        "summary": "Get All Transaction Data only for admin ",
        "description": "see all transaction, this can be used for dashboar admin ",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/transaction/admin/{id}": {
      "get": {
        "summary": "Get transaction Data By Id",
        "description": "This API for see transaction data by Id",
        "tags": ["Transaction"],
        "parameters": [
          {
            "in": "path",
            "description": "input id transaction",
            "name": "id",
            "required": true
          }
        ],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          }
        }
      }
    },
    "/api/transaction/admin/filter/": {
      "get": {
        "summary": "Get Transaction Data By status ",
        "description": "see transaction data by status, this can be used for admin",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "description": "status (success, pending, or canceled)",
            "name": "status",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "type": "array",
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          }
        }
      }
    },
    "/api/transaction/admin/trip": {
      "get": {
        "summary": "Get Transaction Data By Type Trip ",
        "description": "see transaction data by Type trip, this can be used for admin",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "description": "tripId (1 = One way, 2 = Round Trip)",
            "name": "tripId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success responses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "type": "array",
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          }
        }
      }
    },
    "/api/transaction/admin/update/{id}": {
      "put": {
        "summary": "Update Transaction Data By Id",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id transaction",
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/transaksiBody"
        },
        "responses": {
          "200": {
            "description": "Success Update Transaction Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Update Transaction"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transaksi"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/isAdmin"
          }
        }
      }
    },
    "/api/transaction/admin/delete/{id}": {
      "delete": {
        "summary": "Delete Transaction Data By Id",
        "tags": ["Transaction"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id transaction",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success Delete Data Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Delete Transaction"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/payment": {
      "get": {
        "summary": "Get All payment method Data",
        "description": "This API for see all payment method data",
        "tags": ["Payment"],
        "responses": {
          "200": {
            "description": "User and admin can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "integer",
                      "example": "1"
                    },
                    "data": {
                      "$ref": "#/components/schemas/payment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/payment/": {
      "put": {
        "summary": "Transaction Payment",
        "tags": ["Payment"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBody/paymentBody"
        },
        "responses": {
          "200": {
            "description": "Success Transaction Payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Payment Success"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/createPayment"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/transaksiNotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/whistlist/": {
      "get": {
        "summary": "Get Users Wishlist",
        "description": "This API used to be a Users Wishlist",
        "tags": ["Wishlist"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in User can see this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "$ref": "#/components/schemas/wishlist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Need Token for access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whistlist/create": {
      "post": {
        "summary": "Add Users Wishlist",
        "description": "Add Wishlist for User",
        "tags": ["Wishlist"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "description": "Add Wishlist for User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ticketId": {
                    "type": "integer",
                    "example": "2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Logged in User can add this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Add New Wishlist"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": "1"
                        },
                        "ticketId": {
                          "type": "integer",
                          "example": "2"
                        },
                        "userId": {
                          "type": "integer",
                          "example": "2"
                        },
                        "updatedAt": {
                          "type": "date",
                          "example": "2022-12-26T13:13:04.995Z"
                        },
                        "createdAt": {
                          "type": "date",
                          "example": "2022-12-26T13:13:04.995Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Need Token for access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whistlist/delete/{id}": {
      "delete": {
        "summary": "delete wishlist by id",
        "tags": ["Wishlist"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "input id wishlist",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Logged in User can delete this data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success Delete Wishlist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Need Token for access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "Unauthorized": {
        "description": "Need Token for access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "Invalid Token"
                }
              }
            }
          }
        }
      },
      "isAdmin": {
        "description": "Member Can't Access This page",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Unauthorized Access"
                },
                "message": {
                  "type": "string",
                  "example": "only admin can access this page"
                }
              }
            }
          }
        }
      },
      "airportNotFound": {
        "description": "Data Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "airport not found"
                }
              }
            }
          }
        }
      },
      "companyNotFound": {
        "description": "Data Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "company not found"
                }
              }
            }
          }
        }
      },
      "airplaneNotFound": {
        "description": "Data Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "airplane not found"
                }
              }
            }
          }
        }
      },
      "ticketNotFound": {
        "description": "Data Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "ticket not found"
                }
              }
            }
          }
        }
      },
      "transaksiNotFound": {
        "description": "Data Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "transaction not found"
                }
              }
            }
          }
        }
      },
      "searchNotFound": {
        "description": "ticket with input departure Date Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "Tiket Pergi Tidak Ditemukan"
                }
              }
            }
          }
        }
      }
    },
    "requestBody": {
      "airportBody": {
        "description": "Airport Data",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "airportName": {
                  "type": "string",
                  "example": "Bandara Soekarno Hatta"
                },
                "city": {
                  "type": "string",
                  "example": "Jakarta"
                },
                "cityCode": {
                  "type": "string",
                  "example": "JKT"
                }
              }
            }
          }
        }
      },
      "companyBody": {
        "description": "Company Data",
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string",
                  "example": "LION AIR",
                  "required": true
                },
                "image": {
                  "type": "string",
                  "format": "binary",
                  "required": true
                }
              }
            }
          }
        }
      },
      "airplaneBody": {
        "description": "Airplane Data",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "airplaneName": {
                  "type": "string",
                  "example": "Boeing 737-800"
                },
                "airplaneCode": {
                  "type": "string",
                  "example": "1212"
                },
                "companyId": {
                  "type": "integer",
                  "example": "1"
                }
              }
            }
          }
        }
      },
      "userBody": {
        "description": "User Data",
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Rima"
                },
                "lastName": {
                  "type": "string",
                  "example": "Afy"
                },
                "address": {
                  "type": "string",
                  "example": "Bojonegoro"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "082247231584"
                },
                "image": {
                  "type": "string",
                  "format": "binary",
                  "required": true
                },
                "gender": {
                  "type": "string",
                  "example": "female"
                }
              }
            }
          }
        }
      },
      "ticketBody": {
        "description": "Ticket Data",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "T302288"
                },
                "departureDate": {
                  "type": "date",
                  "example": "2022-12-06"
                },
                "departureTime": {
                  "type": "time",
                  "example": "11:35:00"
                },
                "arrivalDate": {
                  "type": "date",
                  "example": "2022-12-06"
                },
                "arrivalTime": {
                  "type": "time",
                  "example": "11:35:00"
                },
                "flightFrom": {
                  "type": "integer",
                  "example": "1"
                },
                "flightTo": {
                  "type": "integer",
                  "example": "2"
                },
                "airplaneId": {
                  "type": "integer",
                  "example": "1"
                },
                "price": {
                  "type": "integer",
                  "example": "750000"
                },
                "capacity": {
                  "type": "integer",
                  "example": "35"
                },
                "class": {
                  "type": "string",
                  "example": "EKONOMI"
                }
              }
            }
          }
        }
      },
      "transaksiBody": {
        "description": "transaction Data",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "ticketGo": {
                  "type": "integer",
                  "example": "1"
                },
                "ticketBack": {
                  "type": "integer",
                  "example": "2"
                },
                "tripId": {
                  "type": "integer",
                  "example": "2"
                },
                "firstName": {
                  "type": "string",
                  "example": "udin"
                },
                "lastName": {
                  "type": "string",
                  "example": "gambut"
                },
                "NIK": {
                  "type": "string",
                  "example": "32151314230402"
                },
                "brithDate": {
                  "type": "date",
                  "example": "2022-1-21"
                }
              }
            }
          }
        }
      },
      "paymentBody": {
        "description": "Payment Reqbody Data",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "transactionId": {
                  "type": "integer",
                  "example": "1"
                },
                "paymentId": {
                  "type": "integer",
                  "example": "1"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "registerUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "6"
          },
          "name": {
            "type": "string",
            "example": "Zidane"
          },
          "email": {
            "type": "string",
            "example": "vito@mail.com"
          },
          "roleId": {
            "type": "integer",
            "example": "2"
          },
          "role": {
            "type": "string",
            "example": "Member"
          },
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwiZW1haWwiOiJ2aXRvQG1haWwuY29tIiwicm9sZUlkIjoyLCJpYXQiOjE2Njk2NjMzMTR9.CtkS22YXgl5zPR0SItR629YoC4hOp9RHnk3sFFnv9Yg"
          }
        }
      },
      "loginUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "6"
          },
          "name": {
            "type": "string",
            "example": "Zidane"
          },
          "email": {
            "type": "string",
            "example": "vito@mail.com"
          },
          "roleId": {
            "type": "integer",
            "example": "2"
          },
          "role": {
            "type": "string",
            "example": "Member"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwiZW1haWwiOiJ2aXRvQG1haWwuY29tIiwicm9sZUlkIjoyLCJpYXQiOjE2Njk2NjM2MDB9.t-mS8RHauM7M5fiIGbXRDaJg7pVE2O82HwfTyY7Z98E"
          }
        }
      },
      "loginAdmin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "Fiqri"
          },
          "email": {
            "type": "string",
            "example": "fiqri@mail.com"
          },
          "roleId": {
            "type": "integer",
            "example": "1"
          },
          "role": {
            "type": "string",
            "example": "Admin"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibmFtZSI6ImZpcXJpIiwiZW1haWwiOiJmaXFyaUBtYWlsLmNvbSIsInJvbGVJZCI6MSwiaWF0IjoxNjcwMzA1MjQwfQ.3vQu0dNVmhZ1GuCnM2ZG4JXFY03lzFJWwSFE7X3zRYQ"
          }
        }
      },
      "role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "2"
          },
          "roleName": {
            "type": "string",
            "example": "Member"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-10-17T14:04:48.389Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-10-17T14:04:48.389Z"
          }
        }
      },
      "airport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "airportName": {
            "type": "string",
            "example": "Bandara Soekarno Hatta"
          },
          "city": {
            "type": "string",
            "example": "Jakarta"
          },
          "cityCode": {
            "type": "string",
            "example": "JKT"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-06T06:17:28.899Z"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-06T06:17:28.899Z"
          }
        }
      },
      "company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "companyName": {
            "type": "string",
            "example": "LION AIR"
          },
          "companyImage": {
            "type": "string",
            "example": "https://ik.imagekit.io/mfn/IMG-1670478922501_rUSD3C2ff.png"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-08T05:55:36.861Z"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-08T05:55:36.861Z"
          }
        }
      },
      "airplane": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "airplaneName": {
            "type": "string",
            "example": "Boeing 737-800"
          },
          "airplaneCode": {
            "type": "string",
            "example": "1212"
          },
          "companyeName": {
            "type": "string",
            "example": "LION AIR"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-12T06:57:14.935Z"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-12T06:57:14.935Z"
          },
          "company": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "companyName": {
                "type": "string",
                "example": "LION AIR"
              },
              "companyImage": {
                "type": "string",
                "example": "https://ik.imagekit.io/mfn/IMG-1670478922501_rUSD3C2ff.png"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-08T05:55:36.861Z"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-08T05:55:36.861Z"
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "2"
          },
          "firstName": {
            "type": "string",
            "example": "Rima"
          },
          "lastName": {
            "type": "string",
            "example": "Afy"
          },
          "address": {
            "type": "string",
            "example": "Bojonegoro"
          },
          "phoneNumber": {
            "type": "string",
            "example": "082247231584"
          },
          "avatar": {
            "type": "string",
            "example": "https://ik.imagekit.io/rima/default-image.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1665289661599"
          },
          "gender": {
            "type": "string",
            "example": "female"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-06T06:17:28.899Z"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-06T06:17:28.899Z"
          }
        }
      },
      "ticket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "code": {
            "type": "string",
            "example": "T302288"
          },
          "departureDate": {
            "type": "date",
            "example": "2022-12-06T00:00:00.000Z"
          },
          "departureTime": {
            "type": "time",
            "example": "11:35:00"
          },
          "arrivalDate": {
            "type": "date",
            "example": "2022-12-06T00:00:00.000Z"
          },
          "arrivalTime": {
            "type": "time",
            "example": "11:35:00"
          },
          "flightFrom": {
            "type": "integer",
            "example": "1"
          },
          "flightTo": {
            "type": "integer",
            "example": "2"
          },
          "airplaneId": {
            "type": "integer",
            "example": "1"
          },
          "price": {
            "type": "integer",
            "example": "750000"
          },
          "capacity": {
            "type": "integer",
            "example": "35"
          },
          "class": {
            "type": "string",
            "example": "EKONOMI"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-08T05:55:36.861Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-08T05:55:36.861Z"
          },
          "origin": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "airportName": {
                "type": "string",
                "example": "Bandara Soekarno Hatta"
              },
              "city": {
                "type": "string",
                "example": "Jakarta"
              },
              "cityCode": {
                "type": "string",
                "example": "JKT"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-06T06:17:28.899Z"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-06T06:17:28.899Z"
              }
            }
          },
          "destination": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "2"
              },
              "airportName": {
                "type": "string",
                "example": "Bandara Ngurah Ray Bali"
              },
              "city": {
                "type": "string",
                "example": "Bali"
              },
              "cityCode": {
                "type": "string",
                "example": "BLI"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-06T06:17:28.899Z"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-06T06:17:28.899Z"
              }
            }
          },
          "airplane": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "airplaneName": {
                "type": "string",
                "example": "Boeing 737-800"
              },
              "airplaneCode": {
                "type": "string",
                "example": "1212"
              },
              "companyeName": {
                "type": "string",
                "example": "LION AIR"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-12T06:57:14.935Z"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-12T06:57:14.935Z"
              },
              "company": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "1"
                  },
                  "companyName": {
                    "type": "string",
                    "example": "LION AIR"
                  },
                  "companyImage": {
                    "type": "string",
                    "example": "https://ik.imagekit.io/mfn/IMG-1670478922501_rUSD3C2ff.png"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-08T05:55:36.861Z"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-08T05:55:36.861Z"
                  }
                }
              }
            }
          }
        }
      },
      "transaksi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "userId": {
            "type": "integer",
            "example": "3"
          },
          "paymentId": {
            "type": "integer",
            "default": null
          },
          "ticketGo": {
            "type": "integer",
            "example": "1"
          },
          "ticketBack": {
            "type": "integer",
            "example": "2"
          },
          "passengerId": {
            "type": "integer",
            "example": "1"
          },
          "transactionCode": {
            "type": "string",
            "example": "TR2022225040"
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "tripId": {
            "type": "integer",
            "example": "2"
          },
          "totalPrice": {
            "type": "string",
            "example": "10750000"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-22T10:50:40.987Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-22T11:01:45.538Z"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "3"
              },
              "firstName": {
                "type": "string",
                "example": "Reza"
              },
              "lastName": {
                "type": "string",
                "example": ""
              },
              "email": {
                "type": "string",
                "example": "rezaboyss@mail.com"
              },
              "roleId": {
                "type": "integer",
                "example": "2"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-22T09:31:13.505Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-22T09:31:13.505Z"
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {}
          },
          "typeTrip": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "type": {
                "type": "string",
                "example": "Round Trip"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-21T05:20:32.642Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-21T05:20:32.642Z"
              }
            }
          },
          "passenger": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "firstName": {
                "type": "string",
                "example": "andi"
              },
              "lastName": {
                "type": "string",
                "example": "baik"
              },
              "NIK": {
                "type": "string",
                "example": "3215135564738"
              },
              "brithDate": {
                "type": "date",
                "example": "2022-05-20T00:00:00.000Z"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-22T10:50:40.968Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-22T11:01:45.527Z"
              }
            }
          },
          "go": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "code": {
                "type": "string",
                "example": "T2023120"
              },
              "departureDate": {
                "type": "date",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "departureTime": {
                "type": "Time",
                "example": "11:35:00"
              },
              "arrivalDate": {
                "type": "string",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "arrivalTime": {
                "type": "string",
                "example": "16:00:00"
              },
              "flightFrom": {
                "type": "integer",
                "example": "1"
              },
              "flightTo": {
                "type": "integer",
                "example": "2"
              },
              "airplaneId": {
                "type": "integer",
                "example": "1"
              },
              "price": {
                "type": "integer",
                "example": "750000"
              },
              "capacity": {
                "type": "integer",
                "example": "35"
              },
              "class": {
                "type": "string",
                "example": "EKONOMI"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-17T07:45:06.147Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-17T07:45:06.147Z"
              },
              "origin": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "airportName": {
                    "type": "string",
                    "example": "Bandara Soekarno Hatta"
                  },
                  "city": {
                    "type": "string",
                    "example": "Jakarta"
                  },
                  "cityCode": {
                    "type": "string",
                    "example": "JKT"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:35.290Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:35.290Z"
                  }
                }
              },
              "destination": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "2"
                  },
                  "airportName": {
                    "type": "string",
                    "example": "Bandara Ngurahray"
                  },
                  "city": {
                    "type": "string",
                    "example": "Bali"
                  },
                  "cityCode": {
                    "type": "string",
                    "example": "BLI"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:12.750Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:12.750Z"
                  }
                }
              },
              "airplane": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "1"
                  },
                  "airplaneName": {
                    "type": "string",
                    "example": "pesawat Terbang"
                  },
                  "airplaneCode": {
                    "type": "string",
                    "example": "2121"
                  },
                  "companyId": {
                    "type": "integer"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:54:09.794Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:54:09.794Z"
                  },
                  "company": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "companyName": {
                        "type": "string",
                        "example": "Batik Air"
                      },
                      "companyImage": {
                        "type": "string",
                        "example": "https://ik.imagekit.io/mfn/IMG-1671090801008_h8UjrEzmZ.png"
                      },
                      "createdAt": {
                        "type": "date",
                        "example": "2022-12-15T07:53:36.690Z"
                      },
                      "updatedAt": {
                        "type": "date",
                        "example": "2022-12-15T07:53:36.690Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "back": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "2"
              },
              "code": {
                "type": "string",
                "example": "T302288"
              },
              "departureDate": {
                "type": "date",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "departureTime": {
                "type": "time",
                "example": "11:35:00"
              },
              "arrivalDate": {
                "type": "date",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "arrivalTime": {
                "type": "time",
                "example": "11:35:00"
              },
              "flightFrom": {
                "type": "integer",
                "example": "2"
              },
              "flightTo": {
                "type": "integer",
                "example": "1"
              },
              "airplaneId": {
                "type": "integer",
                "example": "1"
              },
              "price": {
                "type": "integer",
                "example": "750000"
              },
              "capacity": {
                "type": "integer",
                "example": "35"
              },
              "class": {
                "type": "string",
                "example": "EKONOMI"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-17T07:46:44.915Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-17T07:46:44.915Z"
              },
              "origin": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "1"
                  },
                  "airportName": {
                    "type": "string",
                    "example": "Bandara Halim Perdanakusuma"
                  },
                  "city": {
                    "type": "string",
                    "example": "Jakarta"
                  },
                  "cityCode": {
                    "type": "string",
                    "example": "41333"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:50:39.972Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:50:39.972Z"
                  }
                }
              },
              "destination": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "2"
                  },
                  "airportName": {
                    "type": "string",
                    "example": "Bandara Ngurahray"
                  },
                  "city": {
                    "type": "string",
                    "example": "Bali"
                  },
                  "cityCode": {
                    "type": "string",
                    "example": "BLI"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:12.750Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:12.750Z"
                  }
                }
              },
              "airplane": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "1"
                  },
                  "airplaneName": {
                    "type": "string",
                    "example": "pesawat Terbang"
                  },
                  "airplaneCode": {
                    "type": "string",
                    "example": "2121"
                  },
                  "companyId": {
                    "type": "integer"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:54:09.794Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:54:09.794Z"
                  },
                  "company": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "companyName": {
                        "type": "string",
                        "example": "Batik Air"
                      },
                      "companyImage": {
                        "type": "string",
                        "example": "https://ik.imagekit.io/mfn/IMG-1671090801008_h8UjrEzmZ.png"
                      },
                      "createdAt": {
                        "type": "date",
                        "example": "2022-12-15T07:53:36.690Z"
                      },
                      "updatedAt": {
                        "type": "date",
                        "example": "2022-12-15T07:53:36.690Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "createPayment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "userId": {
            "type": "integer",
            "example": "3"
          },
          "paymentId": {
            "type": "integer",
            "default": "1"
          },
          "ticketGo": {
            "type": "integer",
            "example": "1"
          },
          "ticketBack": {
            "type": "integer",
            "example": "2"
          },
          "passengerId": {
            "type": "integer",
            "example": "1"
          },
          "transactionCode": {
            "type": "string",
            "example": "TR2022225040"
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "tripId": {
            "type": "integer",
            "example": "2"
          },
          "totalPrice": {
            "type": "string",
            "example": "10750000"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-22T10:50:40.987Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-22T11:01:45.538Z"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "3"
              },
              "firstName": {
                "type": "string",
                "example": "Reza"
              },
              "lastName": {
                "type": "string",
                "example": ""
              },
              "email": {
                "type": "string",
                "example": "rezaboyss@mail.com"
              },
              "roleId": {
                "type": "integer",
                "example": "2"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-22T09:31:13.505Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-22T09:31:13.505Z"
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "bankLogo": {
                "type": "string",
                "example": "https://ik.imagekit.io/mfn/Bank_Logo/BRI.png"
              },
              "bankName": {
                "type": "string",
                "example": "Bank Rakyat Indonesia (BRI)"
              },
              "accountName": {
                "type": "string",
                "example": "Lets Flight Indonesia"
              },
              "accountNumber": {
                "type": "string",
                "example": "324525142882575"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-26T06:52:22.391Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-26T06:52:22.391Z"
              }
            }
          },
          "typeTrip": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "type": {
                "type": "string",
                "example": "Round Trip"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-21T05:20:32.642Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-21T05:20:32.642Z"
              }
            }
          },
          "passenger": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "firstName": {
                "type": "string",
                "example": "andi"
              },
              "lastName": {
                "type": "string",
                "example": "baik"
              },
              "NIK": {
                "type": "string",
                "example": "3215135564738"
              },
              "brithDate": {
                "type": "date",
                "example": "2022-05-20T00:00:00.000Z"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-22T10:50:40.968Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-22T11:01:45.527Z"
              }
            }
          },
          "go": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "code": {
                "type": "string",
                "example": "T2023120"
              },
              "departureDate": {
                "type": "date",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "departureTime": {
                "type": "Time",
                "example": "11:35:00"
              },
              "arrivalDate": {
                "type": "string",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "arrivalTime": {
                "type": "string",
                "example": "16:00:00"
              },
              "flightFrom": {
                "type": "integer",
                "example": "1"
              },
              "flightTo": {
                "type": "integer",
                "example": "2"
              },
              "airplaneId": {
                "type": "integer",
                "example": "1"
              },
              "price": {
                "type": "integer",
                "example": "750000"
              },
              "capacity": {
                "type": "integer",
                "example": "35"
              },
              "class": {
                "type": "string",
                "example": "EKONOMI"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-17T07:45:06.147Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-17T07:45:06.147Z"
              },
              "origin": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "airportName": {
                    "type": "string",
                    "example": "Bandara Soekarno Hatta"
                  },
                  "city": {
                    "type": "string",
                    "example": "Jakarta"
                  },
                  "cityCode": {
                    "type": "string",
                    "example": "JKT"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:35.290Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:35.290Z"
                  }
                }
              },
              "destination": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "2"
                  },
                  "airportName": {
                    "type": "string",
                    "example": "Bandara Ngurahray"
                  },
                  "city": {
                    "type": "string",
                    "example": "Bali"
                  },
                  "cityCode": {
                    "type": "string",
                    "example": "BLI"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:12.750Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:12.750Z"
                  }
                }
              },
              "airplane": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "1"
                  },
                  "airplaneName": {
                    "type": "string",
                    "example": "pesawat Terbang"
                  },
                  "airplaneCode": {
                    "type": "string",
                    "example": "2121"
                  },
                  "companyId": {
                    "type": "integer"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:54:09.794Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:54:09.794Z"
                  },
                  "company": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "companyName": {
                        "type": "string",
                        "example": "Batik Air"
                      },
                      "companyImage": {
                        "type": "string",
                        "example": "https://ik.imagekit.io/mfn/IMG-1671090801008_h8UjrEzmZ.png"
                      },
                      "createdAt": {
                        "type": "date",
                        "example": "2022-12-15T07:53:36.690Z"
                      },
                      "updatedAt": {
                        "type": "date",
                        "example": "2022-12-15T07:53:36.690Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "back": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "2"
              },
              "code": {
                "type": "string",
                "example": "T302288"
              },
              "departureDate": {
                "type": "date",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "departureTime": {
                "type": "time",
                "example": "11:35:00"
              },
              "arrivalDate": {
                "type": "date",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "arrivalTime": {
                "type": "time",
                "example": "11:35:00"
              },
              "flightFrom": {
                "type": "integer",
                "example": "2"
              },
              "flightTo": {
                "type": "integer",
                "example": "1"
              },
              "airplaneId": {
                "type": "integer",
                "example": "1"
              },
              "price": {
                "type": "integer",
                "example": "750000"
              },
              "capacity": {
                "type": "integer",
                "example": "35"
              },
              "class": {
                "type": "string",
                "example": "EKONOMI"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-17T07:46:44.915Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-17T07:46:44.915Z"
              },
              "origin": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "1"
                  },
                  "airportName": {
                    "type": "string",
                    "example": "Bandara Halim Perdanakusuma"
                  },
                  "city": {
                    "type": "string",
                    "example": "Jakarta"
                  },
                  "cityCode": {
                    "type": "string",
                    "example": "41333"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:50:39.972Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:50:39.972Z"
                  }
                }
              },
              "destination": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "2"
                  },
                  "airportName": {
                    "type": "string",
                    "example": "Bandara Ngurahray"
                  },
                  "city": {
                    "type": "string",
                    "example": "Bali"
                  },
                  "cityCode": {
                    "type": "string",
                    "example": "BLI"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:12.750Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:51:12.750Z"
                  }
                }
              },
              "airplane": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "1"
                  },
                  "airplaneName": {
                    "type": "string",
                    "example": "pesawat Terbang"
                  },
                  "airplaneCode": {
                    "type": "string",
                    "example": "2121"
                  },
                  "companyId": {
                    "type": "integer"
                  },
                  "createdAt": {
                    "type": "date",
                    "example": "2022-12-15T07:54:09.794Z"
                  },
                  "updatedAt": {
                    "type": "date",
                    "example": "2022-12-15T07:54:09.794Z"
                  },
                  "company": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": "1"
                      },
                      "companyName": {
                        "type": "string",
                        "example": "Batik Air"
                      },
                      "companyImage": {
                        "type": "string",
                        "example": "https://ik.imagekit.io/mfn/IMG-1671090801008_h8UjrEzmZ.png"
                      },
                      "createdAt": {
                        "type": "date",
                        "example": "2022-12-15T07:53:36.690Z"
                      },
                      "updatedAt": {
                        "type": "date",
                        "example": "2022-12-15T07:53:36.690Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "bankLogo": {
            "type": "string",
            "example": "https://ik.imagekit.io/mfn/Bank_Logo/BRI.png"
          },
          "bankName": {
            "type": "string",
            "example": "Bank Rakyat Indonesia (BRI)"
          },
          "accountName": {
            "type": "string",
            "example": "Lets Flight Indonesia"
          },
          "accountNumber": {
            "type": "string",
            "example": "324525142882575"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-26T06:52:22.391Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-26T06:52:22.391Z"
          }
        }
      },
      "wishlist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": "2"
          },
          "ticketId": {
            "type": "integer",
            "example": "1"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-12-26T09:33:06.230Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-12-26T09:33:06.230Z"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "2"
              },
              "firstName": {
                "type": "string",
                "example": "firstName"
              },
              "lastName": {
                "type": "string",
                "example": "lastName"
              },
              "email": {
                "type": "string",
                "example": "example@mail.com"
              },
              "password": {
                "type": "string",
                "example": "$2b$10$o0Ev1T6dYQMtbRplbtDK6O6.Q0L4tqqoPrKi5AmIDXH8J8IZ8i6Qu"
              },
              "roleId": {
                "type": "integer",
                "example": "2"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-16T05:56:01.635Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-16T05:56:01.635Z"
              }
            }
          },
          "ticket": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": "1"
              },
              "code": {
                "type": "string",
                "example": "T302288"
              },
              "departureDate": {
                "type": "date",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "departureTime": {
                "type": "time",
                "example": "11:35:00"
              },
              "arrivalDate": {
                "type": "date",
                "example": "2022-12-06T00:00:00.000Z"
              },
              "arrivalTime": {
                "type": "time",
                "example": "11:35:00"
              },
              "flightFrom": {
                "type": "integer",
                "example": "1"
              },
              "flightTo": {
                "type": "integer",
                "example": "2"
              },
              "airplaneId": {
                "type": "integer",
                "example": "1"
              },
              "price": {
                "type": "integer",
                "example": "750000"
              },
              "capacity": {
                "type": "integer",
                "example": "35"
              },
              "seatNumber": {
                "type": "string",
                "example": "E20"
              },
              "class": {
                "type": "string",
                "example": "EKONOMI"
              },
              "createdAt": {
                "type": "date",
                "example": "2022-12-20T15:55:55.466Z"
              },
              "updatedAt": {
                "type": "date",
                "example": "2022-12-20T15:55:55.466Z"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "description": "Insert Token, You can get it after login",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
